// Generated by Fair on 2022-10-27 14:25:31.849201.
import 'package:flutter_staggered_grid_view/src/widgets/staggered_grid.dart';
import 'package:smooth_star_rating_nsafe/smooth_star_rating.dart';

import 'package:flutter/material.dart';
import 'package:fair/fair.dart';
import 'package:fair_version/fair_version.dart';

class AppGeneratedModule extends GeneratedModule {
  @override
  Map<String, dynamic> components() {
    return {
      'SmoothStarRating': (props) => SmoothStarRating(
            starCount: props['starCount'] ?? 5,
            spacing: props['spacing']?.toDouble() ?? 0.0,
            rating: props['rating']?.toDouble() ?? 0.0,
            defaultIconData: props['defaultIconData'],
            onRatingChanged: props['onRatingChanged'],
            color: props['color'],
            borderColor: props['borderColor'],
            size: props['size']?.toDouble() ?? 25,
            filledIconData: props['filledIconData'],
            halfFilledIconData: props['halfFilledIconData'],
            allowHalfRating: props['allowHalfRating'] ?? true,
          ),
      'StaggeredGrid.custom': (props) => StaggeredGrid.custom(
            key: props['key'],
            delegate: props['delegate'],
            mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0,
            crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0,
            axisDirection: props['axisDirection'],
            children: as<Widget>(props['children']) ?? const <Widget>[],
          ),
      'StaggeredGrid.count': (props) => StaggeredGrid.count(
            key: props['key'],
            crossAxisCount: props['crossAxisCount'],
            mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0,
            crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0,
            axisDirection: props['axisDirection'],
            children: as<Widget>(props['children']) ?? const <Widget>[],
          ),
      'StaggeredGrid.extent': (props) => StaggeredGrid.extent(
            key: props['key'],
            maxCrossAxisExtent: props['maxCrossAxisExtent']?.toDouble(),
            mainAxisSpacing: props['mainAxisSpacing']?.toDouble() ?? 0,
            crossAxisSpacing: props['crossAxisSpacing']?.toDouble() ?? 0,
            axisDirection: props['axisDirection'],
            children: as<Widget>(props['children']) ?? const <Widget>[],
          ),
    };
  }

  @override
  Map<String, bool> mapping() {
    return const {
      'SmoothStarRating': true,
      'StaggeredGrid': true,
    };
  }
}
